name: Build, Scan, and Push

on:
  push:
    branches:
      - master

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      PROJ_VERSION: 0.1.0
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with Gradle (skip tests)
        run: |
          ./gradlew build --info -x test \
            -PprojVersion=${{ env.PROJ_VERSION }} \
            -PnexusUsername=${{ secrets.NEXUS_USERNAME }} \
            -PnexusPassword=${{ secrets.NEXUS_PASSWORD }} \
            -Pnexus_domain=nexusdomain.com
          ./gradlew --stop
      - name: Find built jar
        id: jar
        run: |
          JAR_PATH=$(find ./build/libs -name "*${{ env.PROJ_VERSION }}.jar" | head -n 1)
          echo "JAR_PATH=$JAR_PATH" >> $GITHUB_ENV
          echo "Packaged jar: $JAR_PATH"
      - name: Install TruffleHog
        run: |
          pip install trufflehog
      - name: Run TruffleHog
        run: |
          trufflehog filesystem \
            --directory=./ \
            --json \
            --no-update \
            --no-verification > trufflehog_output.json
          cat trufflehog_output.json
      - name: Install Hadolint
        run: |
          sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          sudo chmod +x /bin/hadolint
      - name: Lint Dockerfile
        run: |
          hadolint Dockerfile | tee hadolint_output.log
          cat hadolint_output.log
      - name: Run Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: harbor.mgmt.eu1.ccp.capgemini.com/ec-integrations/proxy-service:${{ env.PROJ_VERSION }}-2329
          format: table
          output: trivy_output.log
      - name: Show Trivy Scan Result
        run: |
          cat trivy_output.log

  kaniko-push:
    runs-on: ubuntu-latest
    needs: build-and-scan
    container:
      image: gcr.io/kaniko-project/executor:latest
      options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build and Push Docker Image using Kaniko
        env:
          DOCKER_CONFIG: /kaniko/.docker/
        run: |
          mkdir -p /kaniko/.docker
          echo "{\"auths\":{\"harbor.mgmt.eu1.ccp.capgemini.com\":{
            \"username\":\"${{ secrets.HARBOR_USERNAME }}\",
            \"password\":\"${{ secrets.HARBOR_PASSWORD }}\"
          }}}" > /kaniko/.docker/config.json
          /kaniko/executor \
            --dockerfile=Dockerfile \
            --context=./ \
            --destination=harbor.mgmt.eu1.ccp.capgemini.com/ec-integrations/proxy-service:${{ env.PROJ_VERSION }}-2329 \
            --cleanup
